{"version":3,"file":"static/js/88.bbb11dc2.chunk.js","mappings":"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","sources":["components/Card/Card.js","components/Card/CardHeader.js","components/Item.js","components/ItemList.js","components/StockInputCard.js","pages/RegisterStock.js"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction Card(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"Card\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default Card;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction CardHeader(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"CardHeader\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default CardHeader;\n","import {\n    Tr,\n    Td,\n    Avatar,\n    useColorModeValue,\n    Flex,\n    Text,\n} from \"@chakra-ui/react\";\nimport React, {useState } from \"react\";\nconst Item = (props)=>{\n    const { data, onClick} = props;\n    const [ isChecked, setChecked  ] = useState(false);\n    const bgIcons = useColorModeValue(\"gray.100\", \"rgba(255, 255, 255, 0.5)\");\n    const textColor = useColorModeValue(\"gray.700\", \"white\");\n    return (\n             <Tr cursor='pointer'\n                transition='all .25s ease'\n                _hover={{ bg: bgIcons }}\n                borderRadius='15px'\n                onClick={()=>{\n                  onClick(data.id)\n                  setChecked(!isChecked);\n                }}\n                backgroundColor={isChecked?bgIcons:''}\n                >\n                  <Td minWidth={{ sm: \"200px\" }} pr=\"0px\">\n                    <Flex align=\"center\" py=\".8rem\" flexWrap=\"nowrap\">\n                      <Avatar src={data.imageUrl} w=\"50px\" borderRadius=\"12px\" me=\"18px\" />\n                      <Text\n                        fontSize=\"md\"\n                        color={textColor}\n                        fontWeight=\"bold\"\n                      >\n                        {data.name}\n                      </Text>\n                    </Flex>\n                  </Td>\n                  <Td pr=\"10px\">\n                    <Text fontSize=\"md\" mr=\"1rem\" color={textColor} fontWeight=\"bold\" >\n                      {data.price}\n                    </Text>\n                  </Td>\n                </Tr>\n    )\n}\n\nexport default Item;","import {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue\n} from \"@chakra-ui/react\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport React from \"react\";\nimport Item from \"components/Item.js\"\n\nconst ItemList = ({ title, data, onClick }) => {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  return (\n    <Card p='10px' height='900px' alignItems='center'>\n      <CardHeader p='20px 0px 0px 20px'>\n        <Flex justify='space-between' align='center' mb='1rem' w='100%'>\n          <Text fontSize='lg' color={textColor} fontWeight='bold' pb='.5rem' style={{paddingTop:\"10px\"}}>\n            {title}\n          </Text>\n        </Flex>\n      </CardHeader>\n      <Card p='0px' overflowX='auto'>\n        <Table variant='simple' color={textColor} maxWidth='100%'>\n          <Thead>\n            <Tr my='.8rem' ps='0px' >\n              <Th color='gray.400'>\n                메뉴\n              </Th>\n              <Th color='gray.400'>\n                가격\n              </Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {data.map((row) => <Item key={row.id} data={row} onClick={onClick}/>)}\n          </Tbody>\n        </Table>\n      </Card>\n    </Card>\n  );\n};\n\nexport default ItemList;\n","// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Button,\n  Td,\n  Avatar,\n  Input,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  InputGroup,\n  InputRightElement\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport React from \"react\";\nimport { useNavigate  } from \"react-router-dom\";\nimport * as config from 'config.js'\n\nconst StockInputCard = ({ title, data }) => {\n  const textColor = useColorModeValue(\"teal.700\", \"white\");\n  const navigate = useNavigate();\n  \n  function registerStock(){\n    \n    let header = {\n      headers:{\n        Authorization: `Bearer ${localStorage.getItem('apiToken')||config.DEFAULT_TOKEN}`\n      }\n      ,rejectUnauthorized: false\n    }\n    \n    let body = [];\n\n    data.forEach(param => {\n      body.push({\n        itemId:param.id,\n        discountRate:param.discountRate\n        , expiredAt:param.expiredAt+'T00:00:00'\n        , quantity:param.quantity\n      })\n    });\n    console.log(body);\n    axios.post(`${config.BASE_URL}/api/v1/manager/stocks`, body, header).then(res=>{\n      if(res.status===201){\n        alert('등록되었습니다');\n        navigate(\"/\")\n      }\n    })\n  }\n\n  const onChangeDiscountRate = (e,idx) => {\n    data.find(d=>d.id==idx).discountRate = e.target.value;\n  }\n\n  const onChangeQuanty = (e,idx) => {\n    data.find(d=>d.id==idx).quantity = e;\n  }\n  \n  const onChangeDate = (e,idx) => {\n    data.find(d=>d.id==idx).expiredAt = e.target.value;\n  }\n\n  return (\n    <Card p='0px' height='900px' alignItems='center'>\n      <CardHeader p='20px 0px 0px 20px'>\n        <Flex justify='space-between' align='center' mb='1rem' w='100%'>\n          <Text fontSize='lg' color={textColor} fontWeight='bold' pb='.5rem' style={{paddingTop:\"10px\"}}>\n            {title}\n          </Text>\n        </Flex>\n      </CardHeader>\n      <Table variant='simple' color={textColor}>\n        <Thead>\n          <Tr my='.8rem'>\n            <Th color='gray.400'>\n              메뉴\n            </Th>\n            <Th color='gray.400'>\n              가격\n            </Th>\n            <Th color='gray.400'>\n              할인율\n            </Th>\n            <Th color='gray.400'>\n              수량\n            </Th>\n            <Th color='gray.400'>\n              만료일\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {data.map((row) => {\n            return (\n              <Tr key={row.id} >\n                <Td minWidth={{ sm: \"250px\" }}>\n                  <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n                    <Avatar src={row.imageUrl} w=\"50px\" borderRadius=\"12px\" me=\"18px\" />\n                    <Text\n                      fontSize=\"md\"\n                      color={textColor}\n                      fontWeight=\"bold\"\n                    >\n                      {row.name}\n                    </Text>\n                  </Flex>\n                </Td>\n                <Td>\n                  <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n                    {row.price}\n                  </Text>\n                </Td>\n                <Td>\n                  <InputGroup key={row.id}>\n                    <Input type=\"number\" id=\"discountRate\" key={row.id} defaultValue={row.discountRate} onChange={(e)=>onChangeDiscountRate(e,row.id)} style={{width:\"100px\", textAlign:\"right\"}}/>%\n                    <InputRightElement children='%'style={{paddingRight:'15px'}}/>\n                  </InputGroup>\n                </Td>\n                <Td>\n                <NumberInput defaultValue={row.quantity} min={1} max={100} style={{width:\"100px\"}} onChange={(e)=>onChangeQuanty(e,row.id)}>\n                  <NumberInputField />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                  </NumberInputStepper>\n                </NumberInput>\n                </Td>\n                <Td>\n                  <Input type=\"date\" defaultValue={row.expiredAt} onChange={(e)=>onChangeDate(e,row.id)}/>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n      <Button pos=\"absolute\" \n        bottom=\"10\" \n        w=\"20%\" \n        h=\"60px\" \n        bg=\"teal.300\" \n        _hover={{ bg: \"teal.200\" }}\n        onClick={registerStock}>\n          등록</Button>\n    </Card>\n  );\n};\n\nexport default StockInputCard;\n","\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { \n  Flex, \n  Box,\n  Grid,\n  useColorModeValue,\n  Icon,\n } from \"@chakra-ui/react\";\nimport { FiArrowRight, FiArrowLeft } from \"react-icons/fi\";\nimport ItemList from \"components/ItemList\"\nimport Card from \"components/Card/Card.js\";\nimport StockInputCard from \"components/StockInputCard\"\nimport * as config from 'config.js'\n\nconst RegisterStock = () => {\n  const bgIcons = useColorModeValue(\"gray.100\", \"rgba(255, 255, 255, 0.5)\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState(null);\n  const [stockArray, setStockArray] = useState([]);\n  const stocks = useRef(new Set())\n  const ceoSeq = localStorage.getItem('ceoSeq');\n\n  useEffect(()=>{\n    const fetchItems = async() =>{\n      try{\n        // 요청이 시작할 때 error와 items 초기화\n        setError(null);\n        setItems(null);\n\n        // loading 상태를 true로 바꿈\n        setLoading(true);\n        axios.get(`${config.BASE_URL}/api/v1/manager/store/${ceoSeq}/item`,{\n          headers:{\n            Authorization: `Bearer ${localStorage.getItem('apiToken')||config.DEFAULT_TOKEN}`\n          }\n          , rejectUnauthorized: false\n        }).then(response=>{\n          let items = response.data.data.itemList;\n          items.map(i=>{\n            i.price = numberWithCommas(i.price);\n          })\n          setItems(response.data.data.itemList);\n        });\n      }\n      catch(e){\n       setError(e); \n      }\n      setLoading(false);\n    }\n    fetchItems();\n  },[]);\n\n  if(loading) return <div>로딩중</div>\n  if(error) return <div>에러발생</div>\n  if(!items) return null;\n\n  function addToStock(){\n    let nextMonth = new Date().getMonth()+2;\n    let moveItem = Array.from(stocks.current);\n    console.log('moveItem :',moveItem)\n    setStockArray(items.filter(o => {\n      return moveItem.includes(o.id)\n    }).map(res=>{\n      res.discountRate=10\n      res.expiredAt=`2022-0${nextMonth}-01`\n      res.quantity=1\n      return res;\n    }))\n  }\n\n  function selectToggle(key){\n    if(stocks.current.has(key)) stocks.current.delete(key)\n    else {\n      stocks.current.add(key)\n    }\n    console.log(stocks);\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  return (\n    <Flex alignItems='center' justifyContent='center' flexDirection='column'>\n       <Grid\n          templateColumns={{ sm: \"1fr\", lg: \"1fr 0.1fr 2fr\" }}\n          templateRows={{ sm: \"1fr auto\", md: \"1fr\", lg: \"1fr\" }}\n          gap='50px'\n          style={{width:\"100rem\"}}\n          pt='20px'\n          mb='50px'\n          >\n          <Card padding=\"0px\" width=\"100%\">\n            \n        <ItemList\n          title={\"우리 가게 메뉴\"}\n          data={items}\n          onClick={selectToggle}\n        />\n          </Card>\n        <Box w=\"100%\" h=\"50vw\" pt=\"300px\">\n          <Flex\n                justify='center'\n                align='center'\n                w='70px'\n                h='70px'\n                borderRadius='15px'\n                cursor='pointer'\n                transition='all .25s ease'\n                mb='24px'\n                bg=\"white\"\n                boxShadow='lg'\n                >\n            <Icon\n              as={FiArrowRight}\n              w='40px'\n              h='40px'\n              cursor='pointer'\n              _hover={{ filter: \"brightness(120%)\" }}\n              onClick={addToStock}\n            >\n            </Icon>\n          </Flex>\n          <Flex\n                justify='center'\n                align='center'\n                w='70px'\n                h='70px'\n                borderRadius='15px'\n                // border='1px solid lightgray'\n                cursor='pointer'\n                transition='all .25s ease'\n                _hover={{ bg: bgIcons }}\n                mb='24px'\n                bg=\"white\"\n                boxShadow='lg'\n                >\n            <Icon\n              as={FiArrowLeft}\n              w='40px'\n              h='40px'\n              cursor='pointer'\n              _hover={{ filter: \"brightness(120%)\" }}\n            >\n            </Icon>\n          </Flex>\n        </Box>\n        <StockInputCard\n          title={\"등록될 재고\"}\n          amount={30}\n          captions={[\"메뉴\", \"할인율\", \"가격\", \"만료일\"]}\n          data={stockArray}\n        />\n      </Grid>\n    </Flex>\n  )\n}\n\nexport default RegisterStock;"],"names":["props","variant","children","rest","styles","useStyleConfig","__css","data","onClick","useState","isChecked","setChecked","bgIcons","useColorModeValue","textColor","Tr","cursor","transition","_hover","bg","borderRadius","id","backgroundColor","Td","minWidth","sm","pr","align","py","flexWrap","src","imageUrl","w","me","fontSize","color","fontWeight","name","mr","price","title","Card","p","height","alignItems","CardHeader","justify","mb","pb","style","paddingTop","overflowX","maxWidth","my","ps","Th","map","row","navigate","useNavigate","type","defaultValue","discountRate","onChange","e","idx","find","d","target","value","onChangeDiscountRate","width","textAlign","paddingRight","quantity","min","max","onChangeQuanty","expiredAt","onChangeDate","pos","bottom","h","header","headers","Authorization","localStorage","getItem","config","rejectUnauthorized","body","forEach","param","push","itemId","console","log","axios","then","res","status","alert","loading","setLoading","error","setError","items","setItems","stockArray","setStockArray","stocks","useRef","Set","ceoSeq","useEffect","fetchItems","response","itemList","i","toString","replace","justifyContent","flexDirection","templateColumns","lg","templateRows","md","gap","pt","padding","key","current","has","delete","add","boxShadow","as","FiArrowRight","filter","nextMonth","Date","getMonth","moveItem","Array","from","o","includes","FiArrowLeft","amount","captions"],"sourceRoot":""}